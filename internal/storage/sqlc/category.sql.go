// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: category.sql

package sqlc

import (
	"context"
)

const createCategory = `-- name: CreateCategory :one
INSERT INTO categories (name) VALUES ($1) RETURNING name
`

func (q *Queries) CreateCategory(ctx context.Context, name string) (string, error) {
	row := q.db.QueryRow(ctx, createCategory, name)
	err := row.Scan(&name)
	return name, err
}

const deleteCategory = `-- name: DeleteCategory :exec
DELETE FROM categories WHERE name = $1
`

func (q *Queries) DeleteCategory(ctx context.Context, name string) error {
	_, err := q.db.Exec(ctx, deleteCategory, name)
	return err
}

const getCategory = `-- name: GetCategory :one
SELECT id, name FROM categories WHERE name = $1
`

type GetCategoryRow struct {
	ID   int32
	Name string
}

func (q *Queries) GetCategory(ctx context.Context, name string) (GetCategoryRow, error) {
	row := q.db.QueryRow(ctx, getCategory, name)
	var i GetCategoryRow
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
